version: 2.1
orbs:
  maven: circleci/maven@1.4.1

workflows:
  default:
    jobs:
      - build-backend
 #     - test-backend:
 #         requires: [build-backend]
 #     - scan-backend:
 #         requires: [build-backend]

jobs: # a collection of steps
  build-backend: # runs not using Workflows must have a `build` job as entry point
    docker:
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
      - image: circleci/openjdk:17.0.1-jdk-buster # run the steps with Docker with this image as the primary container; this is where all `steps` will run

    working_directory: ~/repo # directory where steps will run
    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps: # a collection of executable commands

      - checkout  # check out source code to working directory
      # Download and cache dependencies
      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: mvn dependency:go-offline # gets the project dependencies
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # Use mvn clean and package as the standard maven build phase
      - run:
          name: Build
          command: mvn -B -DskipTests clean package
      # Then run your tests!
      - run:
          name: Test
          command: mvn test

      - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
          # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: target/surefire-reports

 #     - store_artifacts: # store the uberjar as an artifact
 #         # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
 #         path: target/demo-0.0.1-SNAPSHOT.jar
 #         # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples